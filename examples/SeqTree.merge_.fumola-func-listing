func merge_(xs: LazyList_<X>, ys: LazyList_<X>) : LazyList_<X> {
  switch (xs, ys) {
    case (_, null) xs;
    case (null, _) ys;
    case (?xc, ?yc)
    {
      if (xc.element <= yc.element) {
        let xc_next = force (xc.next);
        ?{
          element=xc.element;
          symbol=xc.symbol;
          next=xc.symbol := thunk { merge_(xc_next, ?yc) }
        }
      } else {
        let yc_next = force (yc.next);
        ?{
          element=yc.element;
          symbol=yc.symbol;
          next=yc.symbol := thunk { merge_(?xc, yc_next) }
        }
      }
    };
  }
}
